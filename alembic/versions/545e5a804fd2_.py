"""empty message

Revision ID: 545e5a804fd2
Revises: 
Create Date: 2025-02-01 14:18:21.692733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '545e5a804fd2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Categories',
    sa.Column('CategoryID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CategoryName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('CategoryID')
    )
    op.create_table('Users',
    sa.Column('UserID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Username', sa.String(), nullable=True),
    sa.Column('PasswordHash', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('RegistrationDate', sa.DATE(), nullable=True),
    sa.Column('createdAt', sa.DATE(), nullable=False),
    sa.Column('updatedAt', sa.DATE(), nullable=False),
    sa.PrimaryKeyConstraint('UserID')
    )
    op.create_table('GameAccounts',
    sa.Column('GameAccountID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('AccountIdentifier', sa.String(), nullable=True),
    sa.Column('Balance', sa.DECIMAL(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['Users.UserID'], ),
    sa.PrimaryKeyConstraint('GameAccountID')
    )
    op.create_table('Items',
    sa.Column('ItemID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('Description', sa.Text(), nullable=True),
    sa.Column('Price', sa.DECIMAL(), nullable=True),
    sa.Column('CategoryID', sa.Integer(), nullable=True),
    sa.Column('Status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['CategoryID'], ['Categories.CategoryID'], ),
    sa.PrimaryKeyConstraint('ItemID')
    )
    op.create_table('Notifications',
    sa.Column('NotificationID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('Message', sa.Text(), nullable=True),
    sa.Column('SendDate', sa.DATE(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['Users.UserID'], ),
    sa.PrimaryKeyConstraint('NotificationID')
    )
    op.create_table('Orders',
    sa.Column('OrderID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('CreationDate', sa.DATE(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['Users.UserID'], ),
    sa.PrimaryKeyConstraint('OrderID')
    )
    op.create_table('OrderItems',
    sa.Column('OrderItemID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('OrderID', sa.Integer(), nullable=True),
    sa.Column('ItemID', sa.Integer(), nullable=True),
    sa.Column('Quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ItemID'], ['Items.ItemID'], ),
    sa.ForeignKeyConstraint(['OrderID'], ['Orders.OrderID'], ),
    sa.PrimaryKeyConstraint('OrderItemID')
    )
    op.create_table('Payments',
    sa.Column('PaymentID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('OrderID', sa.Integer(), nullable=True),
    sa.Column('PaymentMethod', sa.String(), nullable=True),
    sa.Column('Amount', sa.DECIMAL(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['OrderID'], ['Orders.OrderID'], ),
    sa.PrimaryKeyConstraint('PaymentID')
    )
    op.create_table('PurchaseHistory',
    sa.Column('HistoryID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('ItemID', sa.Integer(), nullable=True),
    sa.Column('PurchaseDate', sa.DATE(), nullable=True),
    sa.ForeignKeyConstraint(['ItemID'], ['Items.ItemID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['Users.UserID'], ),
    sa.PrimaryKeyConstraint('HistoryID')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('PurchaseHistory')
    op.drop_table('Payments')
    op.drop_table('OrderItems')
    op.drop_table('Orders')
    op.drop_table('Notifications')
    op.drop_table('Items')
    op.drop_table('GameAccounts')
    op.drop_table('Users')
    op.drop_table('Categories')
    # ### end Alembic commands ###
